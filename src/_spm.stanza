defn read-input (term:Char) -> String :
    var char = get-char(STANDARD-INPUT-STREAM) as Char
    var buff = StringBuffer()
    while char is Char and char !=  term :
        add(buff, char as Char)
        char = get-char(STANDARD-INPUT-STREAM)
    to-string(buff)

defn escape (str:String) -> String : 
    string-join(filter({_ != '\n'}, to-array<Char>(str)))

defn read-input () -> String :
    read-input('\n')

defn make-folder (name:String) :
    println("Creating folder %_..." % [name])
    call-system(to-string("mkdir %_" % [name]))

defn make-file (name:String) :
    println("Creating %_..." % [name])
    call-system(to-string("touch %_" % [name]))

defn main () :
    print("Enter Project name: ")
    val name = escape(read-input())
    make-folder(name)
    make-folder(to-string("%_/src" % [name]))
    make-file(to-string("%_/src/_main.stanza" % [name]))
    println("Done!")
main()
